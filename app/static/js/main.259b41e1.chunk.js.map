{"version":3,"sources":["settings.ts","constants/DialogType.ts","utils/eventUtil.ts","services/AuthService.ts","utils/cookieUtil.ts","utils/restApiUtil.ts","pages/ControlledComponent.tsx","apiClients/RestClient.ts","components/containers/DialogPrompt.tsx","services/DialogService.tsx","services/RoutingService.ts","utils/CustomEventHandler.ts","services/ProductService.ts","services/EventService.ts","inversify.config.ts","services/MasterDataService.ts","reportWebVitals.ts","layout/ViewTemplate.tsx","models/BaseState.ts","utils/commonWrapper.tsx","pages/BasePage.tsx","components/buttons/AnchorButton.tsx","pages/admin/MainAdminPage.tsx","pages/admin/BaseMasterDataPage.tsx","models/MasterDataResult.ts","models/BaseMasterDataState.ts","utils/stringUtil.ts","components/buttons/PaginationButtons.tsx","models/BaseModel.ts","models/Product.ts","components/messages/ErrorMessage.tsx","pages/admin/ProductsPage.tsx","models/User.ts","pages/admin/UsersPage.tsx","components/messages/InfoMessage.tsx","components/buttons/ActionButton.tsx","utils/componentUtil.tsx","pages/auth/LoginPage.tsx","pages/auth/RegisterPage.tsx","pages/error/ErrorView.tsx","pages/home/Home.tsx","pages/product/OrderView.tsx","pages/product/SearchPage.tsx","layout/Routing.tsx","layout/UserSection.tsx","layout/HeaderView.tsx","components/containers/Dialog.tsx","App.tsx","index.tsx"],"names":["Settings","this","_setting","window","appSetting","undefined","DialogType","invokeLater","callback","intervalMs","timeout","setTimeout","clearTimeout","LOGIN_URL","App","hosts","api","LOGOUT_URL","REGISTER_URL","LOAD_APP_URL","AuthService","injectable","inject","RestClient","_loggedUser","_appProfile","onUserUpdated","CustomEventHandler","loadApplication","Promise","resolve","reject","axios","get","headers","commonAuthorizedHeader","then","response","handleAppLoaded","data","result","catch","login","email","password","formData","FormData","append","post","responseJson","loginKey","handleSuccessLogin","err","Error","message","register","name","displayName","phone","rest","postCommon","user","token","setLoginKeyCookie","loggedUser","logout","removeLoginKeyCookie","postAuthorized","value","invoke","loggedIn","role","setCookie","cname","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","LOGIN_KEY_NAME","contentType","ControlledComponent","handleInputChange","e","target","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","input","state","id","type","checked","rawName","obj","forEach","key","index","setState","el","getElementById","focus","Component","url","body","deleteAuthorized","deleteCommon","putAuthorized","putCommon","put","delete","getAuthorized","getCommon","State","content","DialogPrompt","props","inputRef","React","createRef","onSubmit","preventDefault","defaultValue","current","ref","onChange","className","required","DialogService","container","setContainer","showInfo","title","isShown","show","INFO","console","info","showWarning","WARNING","showError","ERROR","toString","error","showConfirmDanger","showConfirm","showConfirmWarning","showPrompt","doShowPrompt","showNoButtons","val","dismissAlert","showContent","createElement","RoutingService","routeUpdateCallbacks","updateRoute","debug","listeners","Map","add","action","set","remove","arg","SEARCH_URL","DETAIL_URL","ProductService","search","startIndex","getDetail","item","image","contextLink","EventService","onProductSearchKeyUpdate","Container","bind","toSelf","inSingletonScope","MasterDataService","API_URL","list","page","perPage","model","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ViewTemplate","attributes","trim","style","textAlign","titleAlign","children","BaseState","busy","commonWrapper","routeParams","useParams","doNavigate","useNavigate","navigate","routingService","BasePage","authorized","initialize","uiSetting","defaultTitle","gotoHomePage","invalidSession","forceUpdate","authService","AnchorButton","to","onClick","iconClass","log","BaseMasterDataPage","load","service","onFormSubmit","insert","update","dialog","showForm","hideForm","defaultItem","edit","ok","resp","loadCurrentPage","actionButton","showDelete","showEdit","MasterDataResult","totalData","items","BaseMasterDataState","randomString","characters","charactersLength","Math","floor","random","formatter","Intl","NumberFormat","currency","currencyNumber","format","PaginationButtons","buttonIndexes","generateButtonValues","limit","activePage","lastIndex","nextPage","previusPage","map","currentPage","displayed_buttons","buttonCount","ceil","min","max","push","BaseModel","Product","description","price","ErrorMessage","startingNumber","alt","src","width","height","href","User","phoneNumber","InfoMessage","ActionButton","marginClass","CommonTable","row","rowKey","col","loading","loginSuccess","finally","padding","passwordRepeat","success","ErrorView","showTitle","welcomingWords","Home","welcomingWord","startDisplayWelcomingWord","join","words","paddingTop","word","WelcomingWord","fontSize","fontWeight","orderCount","note","address","productSpec","OrderView","loadDetail","productService","spec","displayLink","link","margin","searchResult","searchKey","SearchPage","gotoIndex","order","evtService","SearchResult","queries","reqPage","request","count","backgroundImage","thumbnailLink","dangerouslySetInnerHTML","__html","htmlTitle","Routing","path","element","RegisterPage","isAdmin","showDropdown","UserSection","toggleDropdown","onMenuClick","position","zIndex","activeMenu","HeaderView","_user","gotoLoginPage","warn","brandOnClick","onFormSearchSubmit","placeholder","initialMargin","transitionDuration","backColor","marginTop","Backdrop","backgroundColor","bgColor","Footer","yesButton","onConfirm","yesLabel","yesOnly","cancelButton","onCancel","Header","onClose","Dialog","close","focusCancelBtn","stringContent","INFO_NO_BUTTONS","maxWidth","dialogStyle","marginLeft","marginRight","modalDialogClass","display","headerClassName","maxHeight","overflow","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","loaded","loadingError","Root","DialogState","DialogContainer","dialogTitle","dialogContent","dialogYesOnly","dialogOnConfirm","dialogOnCancel","onCloseCallback","dialogType","dialogOnClose","resetProps","dialogService","loc","useLocation","currentLocation","global","self","MonacoEnvironment","getWorkerUrl","_moduleId","label","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.259b41e1.chunk.js","sourcesContent":["let SettingValues:{\r\n        \r\n  \r\n    uiSetting: {\r\n      \r\n        defaultTitle: string\r\n    },\r\n     \r\n    hosts:{ \r\n        api: string,\r\n      \r\n    }\r\n};\r\ntype SettingsType = typeof SettingValues;\r\n \r\nexport default class Settings {\r\n\r\n    private static _setting:SettingsType|undefined = undefined;\r\n\r\n    public static get App() : SettingsType\r\n    {\r\n        if (this._setting)\r\n        {\r\n            return this._setting;\r\n        }\r\n         \r\n        return this._setting = (window as any).appSetting;\r\n    }\r\n    \r\n}","export enum DialogType\r\n{\r\n    INFO, WARNING, ERROR,\r\n    INFO_NO_BUTTONS,\r\n}","export const invokeLater = (callback:()=>any, intervalMs:number) => {\r\n    const timeout = setTimeout(()=>{\r\n        callback();\r\n        clearTimeout(timeout);\r\n      }, intervalMs)\r\n}","import { inject, injectable } from \"inversify\";\nimport User from \"../models/User\";\nimport Settings from './../settings';\nimport WebResponse from './../models/WebResponse';\nimport axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { removeLoginKeyCookie, setLoginKeyCookie,commonAuthorizedHeader } from './../utils/restApiUtil';\nimport ApplicationProfile from './../models/ApplicationProfile';\nimport RestClient from './../apiClients/RestClient';\nimport CustomEventHandler from \"../utils/CustomEventHandler\";\n\n\nconst LOGIN_URL     = Settings.App.hosts.api + \"/api/auth/login\";\nconst LOGOUT_URL    = Settings.App.hosts.api + \"/api/auth/logout\";\nconst REGISTER_URL  = Settings.App.hosts.api + \"/api/auth/register\";\nconst LOAD_APP_URL  = Settings.App.hosts.api + \"/api/public/index\";\n\n@injectable()\nexport default class AuthService {\n     \n    private _loggedUser:User | undefined;\n    private _appProfile:ApplicationProfile | undefined;\n    public readonly onUserUpdated: CustomEventHandler<User | undefined> = new CustomEventHandler<User | undefined>();\n\n    @inject(RestClient)\n    private rest:RestClient;\n \n    get loggedIn() { return this._loggedUser != undefined; }\n\n    get loggedUser() { \n        return this._loggedUser; \n    }\n    get isAdmin() { return this.loggedIn && this.loggedUser?.role === 'Admin' }\n    get appProfile()\n    {\n        return this._appProfile;\n    }\n    \n    private set loggedUser(value:User | undefined) { \n        this._loggedUser = value; \n        this.onUserUpdated.invoke(value);\n    }\n\n    loadApplication = () : Promise<ApplicationProfile> => {\n        \n        return new Promise<ApplicationProfile>((resolve, reject)=>{\n            \n            axios.get(LOAD_APP_URL, { headers: commonAuthorizedHeader() })\n                .then((response:any)=>{\n                    this.handleAppLoaded(response);\n                    resolve(response.data.result);\n                })\n                .catch(reject);\n        })\n    }\n\n    login = (email: string, password: string): Promise<User> => {\n        \n        return new Promise<User>((resolve, reject) => {\n            \n            const formData = new FormData();\n            formData.append(\"email\", email);\n            formData.append(\"password\", password);\n\n            axios.post(LOGIN_URL, formData, {\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' }\n            }).then((response: AxiosResponse) => {\n\n                const responseJson:WebResponse<User>    = response.data;\n                const loginKey                          = response.headers['access-token'];\n                \n                this.handleSuccessLogin(responseJson.result, loginKey);\n                resolve(responseJson.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            });\n        });\n    }\n    register = (\n        email: string, \n        name:string, \n        displayName:string,\n        password: string,\n        phone:string ): Promise<User> => {\n\n        const formData = new FormData();\n        formData.append(\"email\", email);\n        formData.append(\"password\", password);\n        formData.append(\"name\", name);\n        formData.append(\"displayName\", displayName);\n        formData.append(\"phoneNumber\", phone);\n        return this.rest.postCommon(REGISTER_URL, formData, { 'Content-Type': 'application/x-www-form-urlencoded' });\n    }\n\n    handleSuccessLogin = (user:User, token:string) => {\n        setLoginKeyCookie(token);\n        this.loggedUser = user;\n    }\n\n    handleAppLoaded = (response:AxiosResponse) => {\n        if (response.headers[\"access-token\"] && response.headers[\"access-token\"] != \"\")\n        {\n            this.handleSuccessLogin(response.data.user, response.headers['access-token']);\n        }\n    }\n\n    logout = () => {\n        removeLoginKeyCookie();\n        this.loggedUser = undefined;\n        return this.rest.postAuthorized(LOGOUT_URL, {});\n    }\n}","\nexport const removeCookie = (cname:string) => {\n    setCookie(cname, null, 0);\n}\n \nexport const setCookie = function (cname:string, cvalue:string | null, exdays=1) {\n    var d = new Date();\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\n    var expires = \"expires=\" + d.toUTCString();\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\n}\nexport const getCookie = function (cname:string) {\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n        var c = ca[i];\n        while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n        }\n        if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n        }\n    }\n    return \"\";\n}","\nimport { getCookie, setCookie, removeCookie } from './cookieUtil';\nconst LOGIN_KEY_NAME = \"kado-in-login-token\"\n\nexport const commonAuthorizedHeader = (contentType:string = 'application/json') => {\n    return {\n        'Content-Type': contentType,\n        'requestId': \"ABCD\",// getRequestId(),//'localStorage.getItem(\"requestId\")',\n        'Authorization': 'Bearer '+getCookie(LOGIN_KEY_NAME)\n    }\n};\nexport const commonHeader = (contentType:string = 'application/json') => {\n    return {\n        'Content-Type': contentType,\n        // 'requestId': getRequestId(), \n    }\n};\nexport const removeLoginKeyCookie = () => {\n    removeCookie(LOGIN_KEY_NAME);\n}\nexport const setLoginKeyCookie =  (token:string) => {\n    setCookie(LOGIN_KEY_NAME, token);\n}\n","import React, { ChangeEvent, Component } from \"react\";\r\n\r\nexport default abstract class ControlledComponent<P,S > extends Component<P,S>\r\n{\r\n    handleInputChange = (e:ChangeEvent, callback?:(val:any)=>any) => {\r\n        if (e.target instanceof HTMLInputElement || e.target instanceof HTMLTextAreaElement || e.target instanceof HTMLSelectElement)\r\n        {\r\n            const input:HTMLInputElement|HTMLTextAreaElement|HTMLSelectElement = e.target;\r\n            const state = this.state as any;\r\n            const id = input.id;\r\n            if (!state)\r\n            {\r\n                return;\r\n            }\r\n            let value:any;\r\n            if (input.type == \"number\")\r\n            {\r\n                value = input.value;\r\n                // try {\r\n                //     value = parseInt(input.value);\r\n                // } catch (e)\r\n                // {\r\n                //     return;\r\n                // }\r\n            }\r\n            else if (input.type == \"checkbox\" && input instanceof HTMLInputElement)\r\n            {\r\n                value = input.checked;\r\n            }\r\n            else\r\n            {\r\n                value = input.value;\r\n            }\r\n\r\n            // assign to specific field\r\n           \r\n            const name      = input.name;\r\n            let rawName     = name.split(\".\");\r\n            let obj         = state;\r\n            \r\n            rawName.forEach((key, index) => {\r\n                if (obj && index < rawName.length - 1)\r\n                {\r\n                    obj = obj[key];\r\n                }\r\n                if ( index == rawName.length - 1 )\r\n                {\r\n                    obj[key] = value;\r\n                }\r\n            });\r\n            \r\n            // state[input.name] = value;\r\n            this.setState(state, () => {\r\n                if (id)\r\n                {\r\n                    const el = document.getElementById(id);\r\n                    if (el)\r\n                    {\r\n                        el.focus();\r\n                    }\r\n                }\r\n                if (callback)\r\n                {\r\n                    callback(value);\r\n                }\r\n            });\r\n        }\r\n        \r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { injectable } from \"inversify\";\nimport { commonAuthorizedHeader } from \"../utils/restApiUtil\";\n\n@injectable()\nexport default class RestClient\n{\n    postAuthorized = <T>(url:string, body:any, contentType='application/json') : Promise<T> => {\n        return this.postCommon(url, body, commonAuthorizedHeader(contentType));\n    }\n    deleteAuthorized = <T>(url:string, contentType='application/json') : Promise<T> => {\n        return this.deleteCommon(url, commonAuthorizedHeader(contentType));\n    }\n    putAuthorized = <T>(url:string, body:any, contentType='application/json') : Promise<T> => {\n        return this.putCommon(url, body, commonAuthorizedHeader(contentType));\n    }\n    postCommon = <T>(url:string, body:any, headers:any) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            \n           \n            axios.post(url, body, {\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            });\n        });\n    }\n    putCommon = <T>(url:string, body:any, headers:any) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n           \n            axios.put(url, body, {\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            });\n        });\n    }\n    private deleteCommon = <T>(url:string, headers:any) : Promise<T> => {\n        return new Promise<T>((resolve, reject) => {\n            \n           \n            axios.delete(url,{\n                headers: { ...headers }\n            }).then((response: AxiosResponse) => {\n                if (!response.data)\n                {\n                    reject(new Error(\"Invalid response data\"));\n                    return;\n                }\n                resolve(response.data.result);\n            }).catch((err:AxiosError) =>{\n                reject(err.response?.data ?? new Error(err.message))\n            });\n        });\n    }\n\n    getAuthorized = <T>(url:string) : Promise<T> => {\n        return this.getCommon(url, commonAuthorizedHeader());\n    }\n    getCommon = <T>(url:string, headers:any) : Promise<T> => {\n        return new Promise<T>((resolve, reject)=>{\n            \n            axios.get(url, { headers: {\n                ...headers\n            } })\n                .then((response:AxiosResponse)=>{\n                    if (!response.data)\n                    {\n                        reject(new Error(\"Invalid response data\"));\n                        return;\n                    }\n                    resolve(response.data.result);\n                })\n                .catch((err:AxiosError)=>{\n                    reject(err.response?.data ?? new Error(err.message))\n                });\n        })\n    }\n}","import React, { ChangeEvent, FormEvent, ReactNode } from \"react\";\r\nimport ControlledComponent from \"../../pages/ControlledComponent\";\r\n\r\nclass State \r\n{\r\n    content:string = \"\";\r\n}\r\ninterface Props \r\n{\r\n    message:string,\r\n    defaultValue?:string,\r\n    onSubmit:(val:string)=>any\r\n}\r\nexport default class DialogPrompt extends ControlledComponent<Props, State>\r\n{\r\n    state: State = new State();\r\n    inputRef: React.RefObject<HTMLInputElement> = React.createRef();\r\n\r\n    constructor(props:Props)\r\n    {\r\n        super(props);\r\n        if (props.defaultValue)\r\n        {\r\n            this.state.content = props.defaultValue;\r\n        }\r\n    }\r\n\r\n    onSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state.content);\r\n    }\r\n    componentDidMount()\r\n    {\r\n        if (this.inputRef.current)\r\n        {\r\n            this.inputRef.current.focus();\r\n        }\r\n    }\r\n    render(): ReactNode {\r\n        \r\n        return (\r\n            <div>\r\n                <h5>{this.props.message}</h5>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input \r\n                        ref={this.inputRef}\r\n                        name=\"content\"\r\n                        value={this.state.content}\r\n                        onChange={this.handleInputChange}\r\n                        className=\"form-control mb-3\" required />\r\n                    <input \r\n                        type=\"submit\" \r\n                        className=\"btn btn-primary\" \r\n                        value={\"Ok\"} />\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import \"reflect-metadata\"\r\nimport { injectable } from \"inversify\";\r\nimport React, { Component, createElement,   ReactElement } from \"react\"; \r\nimport DialogPrompt from \"../components/containers/DialogPrompt\";\r\nimport { DialogType } from \"../constants/DialogType\";\r\nimport DialogProps from \"../models/DialogProps\";\r\nimport { DialogContainer } from '../App';\r\nimport { invokeLater } from \"../utils/eventUtil\";\r\n\r\nconst \r\n    LABEL_INFO      = \"Information\", \r\n    LABEL_WARNING   = \"Warning\", \r\n    LABEL_ERROR     = \"Error\", \r\n    LABEL_CONFIRM   = \"Confirmation\";\r\n\r\n@injectable()\r\nexport default class DialogService\r\n{\r\n    private container:DialogContainer;\r\n    public setContainer = (container:DialogContainer) => {\r\n        this.container = container;\r\n    }\r\n    public showInfo = (title:string, message:string) => {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.showInfo(title, message)\r\n            }, 100);\r\n            return;\r\n        }\r\n        this.container.show(\r\n            DialogType.INFO,\r\n            title,\r\n            message,\r\n            true,\r\n            console.info\r\n        );\r\n    }\r\n    public showWarning = (title:string, message:string) => {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.showWarning(title, message)\r\n            }, 100);\r\n            return;\r\n        }\r\n        this.container.show(\r\n            DialogType.WARNING,\r\n            title,\r\n            message,\r\n            true,\r\n            console.info\r\n        );\r\n    }\r\n    public showError = (title:string, message:string|Error) => {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.showError(title, message)\r\n            }, 100);\r\n            return;\r\n        }\r\n        this.container.show(\r\n            DialogType.ERROR,\r\n            title,\r\n            message instanceof Error ? message.message : message.toString(),\r\n            true,\r\n            console.error\r\n        );\r\n        \r\n    }\r\n\r\n    public showConfirmDanger = (title:string, message:string) => {\r\n        return this.showConfirm(title, message, DialogType.ERROR);\r\n    }\r\n    public showConfirmWarning = (title:string, message:string) => {\r\n        return this.showConfirm(title, message, DialogType.WARNING);\r\n    }\r\n\r\n    public showConfirm = (title:string, message:string, type:DialogType = DialogType.INFO) => {\r\n\r\n        return new Promise<boolean>((resolve, reject)=>{\r\n            this.container.show(\r\n                type,\r\n                title,\r\n                message,\r\n                false,\r\n                (e:any) => {\r\n                    resolve(true);\r\n                },\r\n                (e:any) => {\r\n                    resolve(false);\r\n                }\r\n            );\r\n        });\r\n    }\r\n   \r\n    public showPrompt = ( title:string, message:string, defaultValue?:string ) => {\r\n        \r\n        return new Promise<string|undefined>((resolve,reject)=>{\r\n            this.doShowPrompt(title, message, resolve, defaultValue);\r\n        });\r\n    }\r\n\r\n    private doShowPrompt = ( title:string, message:string, resolve:(e:any)=>any, defaultValue?:string ) =>\r\n    {\r\n        if (this.container.isShown)\r\n        {\r\n            invokeLater(()=>{\r\n                this.doShowPrompt(title, message,  resolve, defaultValue);\r\n            }, 100);\r\n            return;\r\n        }\r\n        const onSubmit = (val:string)=>{\r\n            this.dismissAlert();\r\n            resolve(val);\r\n        };\r\n        this.container.showNoButtons( \r\n            title,\r\n            <DialogPrompt\r\n                message={message}\r\n                onSubmit={onSubmit}\r\n                defaultValue={defaultValue}/>,\r\n            (e:any) => { resolve(undefined) }, \r\n        );\r\n    }\r\n\r\n    public dismissAlert = () => {\r\n        this.container.dismissAlert();\r\n    }\r\n\r\n    public showContent = ( title:string, content: ReactElement<any, typeof Component> ) => {\r\n        return new Promise<boolean>((resolve, reject) => {\r\n            let el = createElement(content.type, content.props);\r\n            this.container.showNoButtons(  title, el, (e:any) => { resolve(false) }  );\r\n        });\r\n    }\r\n} \r\n\r\ninterface DialogPromptProps \r\n{\r\n    message:string,\r\n    onChange:(val:string)=>any\r\n}","import { injectable } from \"inversify\";\nimport CustomEventHandler from './../utils/CustomEventHandler';\n\n@injectable()\nexport default class RoutingService\n{\n    public readonly routeUpdateCallbacks: CustomEventHandler<string> = new CustomEventHandler<string>();\n\n    constructor()\n    {\n\n    }\n\n    \n    updateRoute = (url:string) => {\n        console.debug(\"Route changed via call to navigate: \" + url);\n        this.routeUpdateCallbacks.invoke(url);\n    }\n}","export default class CustomEventHandler<T> {\n    private readonly listeners: Map<string, (arg: T) => any> = new Map();\n  \n    add = (key: string, action: (arg: T) => any) => {\n      this.listeners.set(key, action);\n    }\n    remove = (key: string) => {\n      this.listeners.delete(key);\n    }\n    invoke = (arg: T) => {\n      this.listeners.forEach((action) => {\n        action(arg);\n      });\n    }\n  }\n  ","import { inject, injectable } from \"inversify\";\nimport ProductSearchResult from \"../models/product/ProductSearchResult\";\nimport ProductSpec from \"../models/product/ProductSpec\";\nimport Settings from \"../settings\";\nimport RestClient from './../apiClients/RestClient';\nimport SearchResultItem from './../models/product/SearchResultItem';\n\n\n\nconst SEARCH_URL     = Settings.App.hosts.api + \"/api/product/search-ecommerce\";\nconst DETAIL_URL     = Settings.App.hosts.api + \"/api/product/search-ecommerce-detail\";\n\n@injectable()\nexport default class ProductService\n{\n    @inject(RestClient)\n    private rest:RestClient;\n\n    search = (key:string, startIndex:number) : Promise<ProductSearchResult> => {\n        const url = SEARCH_URL + `?key=${key}&startIndex=${startIndex}`;\n        return this.rest.getCommon(url, {});\n    }\n\n    getDetail = (item:SearchResultItem) : Promise<ProductSpec> => {\n        const url = DETAIL_URL + `?link=${item.image.contextLink}`;\n        return this.rest.getCommon(url, {});\n    }\n}","import { injectable } from \"inversify\";\nimport CustomEventHandler from './../utils/CustomEventHandler';\n\n@injectable()\nexport default class EventService\n{\n    public readonly onProductSearchKeyUpdate: CustomEventHandler<string> = new CustomEventHandler<string>();\n}","import { Container } from 'inversify'\r\nimport 'reflect-metadata'\r\nimport DialogService from './services/DialogService';\r\nimport RoutingService from './services/RoutingService';\r\nimport AuthService from './services/AuthService';\r\nimport ProductService from './services/ProductService';\r\nimport MasterDataService from './services/MasterDataService';\r\nimport RestClient from './apiClients/RestClient';\r\nimport EventService from './services/EventService';\r\n\r\n\r\nlet container:Container = new Container();\r\n\r\ncontainer.bind(EventService).toSelf().inSingletonScope();\r\ncontainer.bind(RestClient).toSelf().inSingletonScope();\r\ncontainer.bind(DialogService).toSelf().inSingletonScope();\r\ncontainer.bind(AuthService).toSelf().inSingletonScope();\r\ncontainer.bind(ProductService).toSelf().inSingletonScope();\r\ncontainer.bind(MasterDataService).toSelf().inSingletonScope();\r\ncontainer.bind(RoutingService).toSelf().inSingletonScope();\r\n\r\nexport {container}\r\n","import { inject, injectable } from \"inversify\";\nimport BaseModel from \"../models/BaseModel\";\nimport MasterDataResult from \"../models/MasterDataResult\";\nimport WebResponse from \"../models/WebResponse\";\nimport RestClient from './../apiClients/RestClient';\nimport Settings from './../settings';\n\nlet models : \"products\" | \"users\" | \"packagings\" ;\n\nconst API_URL = Settings.App.hosts.api +\"/api/admin/\";\n\n@injectable()\nexport default class MasterDataService\n{\n    @inject(RestClient)\n    private rest:RestClient;\n\n    list = <T extends BaseModel>(\n        name: typeof models, \n        page:number, \n        perPage:number): Promise<MasterDataResult<T>> => {\n            \n        const url = `${API_URL}${name}?page=${page}&perPage=${perPage}`;\n        return this.rest.getAuthorized(url);\n    }\n    get = <T extends BaseModel>(name: typeof models, id:number): Promise<T> => {\n        \n        const url = `${API_URL}${name}/${id}`;\n        return this.rest.getAuthorized(url);\n    }\n    post = <T extends BaseModel>(name: typeof models, model:T): Promise<T> => {\n\n        const url = `${API_URL}${name}`;\n        return this.rest.postAuthorized(url, model);\n    }\n    put = <T extends BaseModel>(name: typeof models, id:number, model:T): Promise<T> => {\n\n        const url = `${API_URL}${name}/${id}`;\n        return this.rest.putAuthorized(url, model);\n    }\n    delete = <T extends BaseModel>(name: typeof models, id:number): Promise<T> => {\n\n        const url = `${API_URL}${name}/${id}`;\n        return this.rest.deleteAuthorized(url);\n    }\n}","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component } from \"react\";\r\nimport Menu from \"../models/Menu\"; \r\n \r\nclass Props\r\n{\r\n    children:any;\r\n    title?:string;\r\n    attributes?:any;\r\n    titleAlign?:undefined |'center' | 'left' | 'right';\r\n}\r\nexport class ViewTemplate extends Component<Props, any>\r\n{\r\n    render(): React.ReactNode {\r\n        \r\n        return (\r\n            <div  {...this.props.attributes} className=\"container-fluid baseView\" >\r\n                {this.props.title && this.props.title.trim() != \"\" ? \r\n                    <h2 style={{textAlign: this.props.titleAlign}}>{this.props.title}</h2> : null}\r\n                {this.props.children}\r\n            </div>\r\n        )\r\n    }\r\n}","export default class BaseState\r\n{\r\n    error:Error|undefined;\r\n    message:string|undefined;\r\n    busy:boolean = false;\r\n}","import React from \"react\"\r\nimport { NavigateFunction, Params, useNavigate, useParams } from \"react-router-dom\"\r\nimport { container } from \"../inversify.config\";\r\nimport RoutingService from './../services/RoutingService';\r\n\r\nexport function commonWrapper(Component: any) {\r\n    \r\n    return (props: any) => {\r\n        const routeParams: Params<string>   = useParams();\r\n        const doNavigate: NavigateFunction  = useNavigate();\r\n        const navigate: (url:string)=> void = (url:string) : void => {\r\n            \r\n            let routingService:RoutingService = container.get(RoutingService);\r\n            doNavigate(url);\r\n            routingService.updateRoute(url);\r\n        };\r\n        return <Component navigate={navigate} routeParams={routeParams} {...props} />\r\n    }\r\n}","import React from \"react\";\r\nimport { resolve } from \"inversify-react\";\r\nimport BaseProps from \"../models/BaseProps\";\r\nimport BaseState from \"../models/BaseState\"; \r\nimport ControlledComponent from \"./ControlledComponent\";\r\nimport Settings from './../settings';\r\nimport DialogService from './../services/DialogService';\r\nimport { ViewTemplate } from \"../layout/ViewTemplate\";\r\nimport AuthService from './../services/AuthService';\r\n\r\nexport abstract class BasePage<P extends BaseProps,S extends BaseState> extends ControlledComponent<P, S>\r\n{\r\n    title?:string;\r\n    @resolve(AuthService)\r\n    protected authService:AuthService;\r\n    @resolve(DialogService)\r\n    protected dialog:DialogService;\r\n\r\n    constructor(props:P, private authorized:boolean = false, title?:string)\r\n    {\r\n        super(props);\r\n        this.title = title;\r\n        this.initialize();\r\n    }\r\n    initialize = () => {\r\n        document.title = this.title ? this.title : Settings.App.uiSetting.defaultTitle;\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.forceUpdate();\r\n    }\r\n\r\n    componentDidUpdate()\r\n    {\r\n        if (this.authorized && !this.authService.loggedIn )\r\n        {   \r\n            this.navigate(\"/\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    protected navigate = (url:string) =>\r\n    {\r\n        if (this.props.navigate)\r\n        {\r\n            this.props.navigate(url);\r\n            return;\r\n        }\r\n        console.error(\"props.navigate does not exist\");\r\n    }\r\n\r\n    protected gotoHomePage = () => {\r\n        this.navigate(\"/\");\r\n    }\r\n\r\n    \r\n    protected invalidSession = () => \r\n    {\r\n        return (\r\n            <ViewTemplate title=\"Invalid Session\">\r\n                <p>You must log in to access this page</p>\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n    \r\n}\r\n \r\n","import { Component, ReactNode } from \"react\";\nimport { Link } from 'react-router-dom';\n\ninterface Props \n{\n    show?:boolean;\n    iconClass?:string;\n    children?:any;\n    className?:string;\n    onClick?:(e:any)=>any;\n    to?:string;\n}\nexport default class AnchorButton extends Component<Props, any>\n{\n    render(): ReactNode {\n        if (this.props.show != undefined && this.props.show === false)\n        {\n            return null;\n        }\n        if (!this.props.to)\n        {\n            return (\n                <a className={this.props.className} onClick={this.props.onClick}>\n                    {this.props.iconClass?\n                    <i className={this.props.iconClass+ \" mr-3\"}/> : null }\n                    {this.props.children}\n                </a>\n            )\n        }\n        return (\n            <Link to={this.props.to} className={this.props.className} onClick={this.props.onClick}>\n                {this.props.iconClass?\n                <i className={this.props.iconClass+ \" mr-3\"}/> : null }\n                {this.props.children}\n            </Link>\n        )\n    }\n}","import { ReactNode } from \"react\";\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\nimport BaseState from \"../../models/BaseState\";\nimport { commonWrapper } from \"../../utils/commonWrapper\";\nimport { BasePage } from \"../BasePage\";\nimport BaseProps from './../../models/BaseProps';\nimport AnchorButton from './../../components/buttons/AnchorButton';\n\nclass State extends BaseState\n{\n\n}\nclass MainAdminPage extends BasePage<BaseProps, State>\n{\n    state: Readonly<State> = new State();\n    constructor(props:BaseProps)\n    {\n        super(props, true, \"Admin Area\");\n    }\n    componentDidMount(): void {\n        this.forceUpdate();\n    }\n    componentDidUpdate(): void {\n        if (!this.authService.loggedIn || this.authService.loggedUser?.role !== 'Admin')\n        {\n            this.gotoHomePage();\n            console.log(\"not admin!\");\n        }\n    }\n    render(): ReactNode {\n        \n        return (\n            <ViewTemplate title=\"Admin Area\">\n                <AnchorButton className=\"btn btn-light mr-3\" to=\"/admin/users\" iconClass=\"fas fa-users\" >\n                    User Management\n                </AnchorButton>\n                <AnchorButton className=\"btn btn-light mr-3\" to=\"/admin/products\" iconClass=\"fas fa-shopping-cart\" >\n                    Product Management\n                </AnchorButton>\n            </ViewTemplate>\n        )\n    }\n}\n\nexport default commonWrapper(MainAdminPage);","import { resolve } from \"inversify-react\";\nimport BaseModel from \"../../models/BaseModel\";\nimport { BasePage } from \"../BasePage\";\nimport BaseProps from './../../models/BaseProps';\nimport MasterDataService from './../../services/MasterDataService';\nimport BaseMasterDataState from './../../models/BaseMasterDataState';\nimport { FormEvent, Fragment } from \"react\";\nimport AnchorButton from \"../../components/buttons/AnchorButton\";\n\nlet models : \"products\" | \"users\" | \"packagings\" ;\n\nabstract class BaseMasterDataPage<M extends BaseModel, P extends BaseProps, S extends BaseMasterDataState<M>> extends BasePage<P, S>\n{\n    @resolve(MasterDataService)\n    private service:MasterDataService;\n\n    constructor(props:P, private  name:typeof models, title:string)\n    {\n        super(props, true, title);\n    }\n    abstract get defaultItem() : M;\n    get item():M | undefined { return this.state.item as M | undefined  }\n    load = (page:number = 0, perPage:number = 10) => {\n        this.service.list<M>(this.name, page, perPage)\n            .then(response=>{\n                this.setState({result: response})\n            })\n            .catch(console.error);\n    }\n    componentDidMount(): void {\n        this.load();\n    }\n    onFormSubmit = (e:FormEvent) => {\n        e.preventDefault();\n        const item = this.state.item as M | undefined;\n        if (!item)\n        {\n            this.dialog.showError(\"Submission Error\", \"Undefined payload\");\n            return;\n        }\n        if (item.id ==undefined || item.id <= 0)\n        {\n            this.insert(item);\n        }\n        else\n        {\n            this.update(item);\n        }\n    }\n    showForm = () => this.setState({ showForm: true });\n    hideForm = () => this.setState({ item: this.defaultItem, showForm: false });\n    edit = (model:M) => {\n        this.setState({item: model}, this.showForm);\n    }\n    delete = (model:M) => {\n        this.dialog.showConfirmDanger(\"Delete Item\", \"Are you sure to delete this item? \")\n            .then(ok=>{\n                if (ok) {\n                    this.service.delete(this.name, model.id)\n                        .then(resp => {\n                            this.dialog.showInfo(\"Delete Success\", \"Item has been deleted\");\n                            this.loadCurrentPage();\n                        })\n                        .catch(err=>{\n                            this.dialog.showError(\"Delete Failed\", err);\n                        })\n\n                }\n            })\n    }\n    insert = (model:M) => {\n        this.dialog.showConfirm(\"Insert Item\", \"Are you sure to add this item? \")\n            .then(ok=>{\n                if (ok) {\n                    this.service.post(this.name, model)\n                        .then(resp => {\n                            this.dialog.showInfo(\"Insert Success\", \"New item has been inserted\");\n                            this.loadCurrentPage();\n                            this.hideForm();\n                        })\n                        .catch(err=>{\n                            this.dialog.showError(\"Insert Failed\", err);\n                        })\n\n                }\n            })\n    }\n    update = (model:M) => {\n        this.dialog.showConfirm(\"Update Item\", \"Are you sure to update this item? \")\n            .then(ok=>{\n                if (ok) {\n                    this.service.put(this.name, model.id, model)\n                        .then(resp => {\n                            this.dialog.showInfo(\"Update Success\", \"Item has been updated\");\n                            this.loadCurrentPage();\n                            this.hideForm();\n                        })\n                        .catch(err=>{\n                            this.dialog.showError(\"Update Failed\", err);\n                        })\n\n                }\n            })\n    }\n    loadCurrentPage = () => {\n        this.load(this.state.result.page, this.state.result.perPage);\n    }\n    \n    get startingNumber()\n    {\n        return 1 +(this.state.result.page * this.state.result.perPage);\n    }\n    protected actionButton = (item:M, showDelete = true, showEdit = true) => {\n        return (\n            <Fragment>\n                { showEdit && \n                <AnchorButton \n                    onClick={()=>this.edit(item)}\n                    iconClass=\"fas fa-edit\"\n                    className=\"btn btn-text clickable\"\n                />\n                }\n                { showDelete &&\n                <AnchorButton \n                    onClick={()=>this.delete(item)}\n                    className=\"btn btn-text text-danger\"\n                    iconClass=\"fas fa-times\"\n                />\n                }\n            </Fragment>\n        )\n    }\n}\n\nexport default BaseMasterDataPage;","\nimport BaseModel from './BaseModel';\nexport default class MasterDataResult<T extends BaseModel>\n{\n    totalData:number = 0;\n    page:number = 0;\n    perPage:number = 10;\n    items:T[] = []\n}","import BaseModel from \"./BaseModel\";\nimport BaseState from \"./BaseState\";\nimport MasterDataResult from './MasterDataResult';\n\nexport default class BaseMasterDataState<T extends BaseModel> extends BaseState\n{\n    result:MasterDataResult<T> = new MasterDataResult<T>();\n    item:T | undefined;\n    showForm:boolean = false;\n}","export const randomString = (length: number) => {\r\n   var result = '';\r\n   var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n   var charactersLength = characters.length;\r\n   for (var i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n   }\r\n   return result;\r\n}\r\nconst formatter = new Intl.NumberFormat('en-US', {\r\n   style: 'currency',\r\n   currency: 'IDR',\r\n\r\n   // These options are needed to round to whole numbers if that's what you want.\r\n   //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\r\n   //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\r\n});\r\n\r\nexport const currencyNumber = (value: number) => {\r\n\r\n   return formatter.format(value);\r\n}\r\n","\nimport React, { Component } from 'react';\nimport { randomString } from './../../utils/stringUtil';\ninterface IProps {\n    limit: number,\n    totalData: number,\n    activePage: number,\n    onClick: any\n}\nexport default class PaginationButtons extends Component<IProps, any> {\n    constructor(props: IProps) {\n        super(props);\n    }\n    render() {\n        const buttonIndexes = generateButtonValues(this.props.limit, this.props.totalData, this.props.activePage);\n        if (buttonIndexes.length == 0) { return null }\n        const lastIndex = buttonIndexes[buttonIndexes.length - 1];\n        const nextPage = this.props.activePage + 1 >= lastIndex  ? 0 : this.props.activePage + 1;\n        const previusPage = this.props.activePage - 1 < 0? lastIndex-1 : this.props.activePage - 1;\n        return (<div>\n            <nav aria-label=\"Page navigation example\">\n                <ul className=\"pagination\">\n                    <li className=\"page-item\"><a className=\"page-link clickable\" onClick={(e) => this.props.onClick(previusPage)}>Previous</a></li>\n                    {buttonIndexes.map((page, i) => {\n                        return (\n                        <li key={\"NAV-\"+randomString(10)} className={\"page-item \"+(page-1 == this.props.activePage?\"active\":\"\")}>\n                            <a className=\"page-link clickable\" onClick={(e) => this.props.onClick(page - 1)} >{page}</a>\n                        </li>\n                        )\n                    })}\n                    <li className=\"page-item\"><a className=\"page-link clickable\" onClick={(e) => this.props.onClick(nextPage)}>Next</a></li>\n                </ul>\n            </nav>\n        </div>)\n    }\n}\n\nconst generateButtonValues = (limit: number, totalData: number, currentPage: number) => {\n\n    /* DISPLAYED BUTTONS */\n    const displayed_buttons: number[] = [];\n    const buttonCount = Math.ceil(totalData / limit);\n\n    // console.debug(\"current page:\", currentPage);\n    const min = (currentPage) - 1;\n    const max = (currentPage) + 3;\n    // const min = (currentPage) - 2;\n    // const max = (currentPage) + 2;\n\n    // console.debug(\"min\", min, \"current page:\", currentPage, \"max\", max);\n    if (buttonCount > 1) {\n        displayed_buttons.push(1);\n    }\n    for (let i = min; i <= max; i++) {\n        if (i > 1 && i <= buttonCount) {\n            (displayed_buttons.push(i));\n        }\n    }\n    if (max < buttonCount) {\n        displayed_buttons.push(buttonCount);\n    }\n    return displayed_buttons;\n}\n","export default class BaseModel\n{\n    id:number;\n}","import BaseModel from \"./BaseModel\";\n\nexport default class Product extends BaseModel\n{\n    name:string;\n    image:string;\n    description:string;\n    price:number;\n}","const ErrorMessage = (props:{children:any, show?:boolean}) => {\n\n    if (props.show === false)\n    {\n        return null;\n    }\n    return (\n        <div className=\"alert alert-danger\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default ErrorMessage;","import { ReactNode } from \"react\";\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\nimport { commonWrapper } from \"../../utils/commonWrapper\";\nimport BaseProps from '../../models/BaseProps';\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\nimport BaseMasterDataState from '../../models/BaseMasterDataState';\nimport PaginationButtons from \"../../components/buttons/PaginationButtons\";\nimport Product from './../../models/Product';\nimport ErrorMessage from \"../../components/messages/ErrorMessage\";\nimport AnchorButton from \"../../components/buttons/AnchorButton\";\nimport { currencyNumber } from \"../../utils/stringUtil\";\n\nclass State extends BaseMasterDataState<Product>\n{\n\n}\nclass ProductsPage extends BaseMasterDataPage<Product, BaseProps, State>\n{\n    state: State = new State();\n    constructor(props: BaseProps) {\n        super(props, \"products\", \"Product Management\")\n        this.state.item = new Product();\n    }\n    get defaultItem(): Product { return new Product() }\n    \n    render(): ReactNode {\n        \n        if (this.state.showForm)\n        {\n\n            return (\n                <ViewTemplate title={this.title}>\n                    <div className=\"mb-3\">\n                        <AnchorButton onClick={this.hideForm} className=\"btn btn-light\">Close Form</AnchorButton>\n                    </div>\n                    <form onSubmit={this.onFormSubmit}>\n                        <p>Name</p>\n                        <input\n                            className=\"form-control form-control-sm\"\n                            value={this.item?.name}\n                            onChange={this.handleInputChange}\n                            name=\"item.name\" required/>\n                        <p>Price</p>\n                        <input\n                            type=\"number\"\n                            className=\"form-control form-control-sm\"\n                            value={this.item?.price}\n                            onChange={this.handleInputChange}\n                            name=\"item.price\" required/>\n                        <p>Desc</p>\n                        <textarea\n                            className=\"form-control form-control-sm\"\n                            value={this.item?.description}\n                            onChange={this.handleInputChange}\n                            name=\"item.description\" required/>\n                        <p>Image Link</p>\n                        <input\n                            className=\"form-control form-control-sm\"\n                            value={this.item?.image}\n                            onChange={this.handleInputChange}\n                            name=\"item.image\" required/>\n                        <p/>\n                        <input type=\"submit\" className=\"btn btn-primary\" value={\"Submit\"} />\n                    </form>\n                </ViewTemplate>\n            )\n        }\n\n        const result = this.state.result;\n        const items = result.items;\n        return (\n            <ViewTemplate title={this.title}>\n                <div className=\"mb-3\">\n                    <AnchorButton onClick={this.showForm} iconClass=\"fas fa-plus\" className=\"btn btn-light\">Add Record</AnchorButton>\n                </div>\n                {items == undefined ?\n                    <i>Loading...</i> :\n                    items.length == 0 ?\n                    <ErrorMessage children={\"No items\"} /> : \n                    <div className=\"mt-5 pl-3 pr-3\">\n                        <PaginationButtons \n                            limit={result.perPage} \n                            totalData={result.totalData} \n                            activePage={result.page} \n                            onClick={this.load} />\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>No</th>\n                                    <th>Name</th>\n                                    <th>Description</th>\n                                    <th>Price</th>\n                                    <th>Image</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {items.map((item, i) => {\n                                    return (\n                                        <tr key={\"product-\" + item.id}>\n                                            <td>{this.startingNumber + i}</td>\n                                            <td>{item.name}</td>\n                                            <td>{item.description}</td>\n                                            <td>{currencyNumber(item.price)}</td>\n                                            <td>\n                                                <img className=\"border\"  alt={item.image} src={item.image} width={50} height={50} />\n                                                <br/>\n                                                <a target={\"_blank\"} href={item.image}>\n                                                    view\n                                                </a>\n                                            </td>\n                                            <td>\n                                               {this.actionButton(item)}\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n            </ViewTemplate>\n        )\n    }\n}\n\nexport default commonWrapper(ProductsPage)","\nimport UserRole from './../constants/UserRole';\nimport BaseModel from './BaseModel';\nexport default class User extends BaseModel\n{\n    name:string;\n    displayName:string;\n    role:UserRole;\n    phoneNumber:string;\n    email: string;\n\n}","import { ReactNode } from \"react\";\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\nimport { commonWrapper } from \"../../utils/commonWrapper\";\nimport BaseProps from './../../models/BaseProps';\nimport BaseMasterDataPage from \"./BaseMasterDataPage\";\nimport BaseMasterDataState from './../../models/BaseMasterDataState';\nimport User from \"../../models/User\";\nimport PaginationButtons from \"../../components/buttons/PaginationButtons\";\nimport ActionButton from \"../../components/buttons/ActionButton\";\n\nclass State extends BaseMasterDataState<User>\n{\n\n}\nclass UsersPage extends BaseMasterDataPage<User, BaseProps, State>\n{\n    state: Readonly<State> = new State();\n    constructor(props: BaseProps) {\n        super(props, \"users\", \"User Management\")\n    }\n    get defaultItem(): User { return new User() }\n    \n    render(): ReactNode {\n        \n        const result = this.state.result;\n        const items = result?.items;\n        return (\n            <ViewTemplate title={this.title}>\n                {result == undefined || items == undefined ?\n                    <i>Loading...</i> :\n                    <div className=\"mt-5 pl-3 pr-3\">\n                        <PaginationButtons \n                            limit={result.perPage} \n                            totalData={result.totalData} \n                            activePage={result.page} \n                            onClick={this.load} />\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>No</th>\n                                    <th>Email</th>\n                                    <th>Name</th>\n                                    <th>Display Name</th>\n                                    <th>Phone</th>\n                                    <th>Action</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {items.map((item, i) => {\n                                    return (\n                                        <tr key={\"user-\" + item.id}>\n                                            <td>{this.startingNumber + i}</td>\n                                            <td>{item.email}</td>\n                                            <td>{item.name}</td>\n                                            <td>{item.displayName}</td>\n                                            <td>{item.phoneNumber}</td>\n                                            <td>\n                                                {this.actionButton(item, true, false)}\n                                            </td>\n                                        </tr>\n                                    )\n                                })}\n                            </tbody>\n                        </table>\n                    </div>}\n            </ViewTemplate>\n        )\n    }\n}\n\nexport default commonWrapper(UsersPage)","const InfoMessage = (props:{children:any, show?:boolean}) => {\n\n    if (props.show === false)\n    {\n        return null;\n    }\n    return (\n        <div className=\"alert alert-info\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default InfoMessage;","import { Component, ReactNode } from \"react\";\n\ninterface Props \n{\n    show?:boolean;\n    iconClass?:string;\n    children?:any;\n    className?:string;\n    onClick?:(e:any)=>any;\n}\nexport default class ActionButton extends Component<Props, any>\n{\n    render(): ReactNode {\n        if (this.props.show != undefined && this.props.show === false) {\n            return null;\n        }\n        const marginClass = this.props.children ? ' mr-3 ' : '';\n        return (\n            <button className={this.props.className} onClick={this.props.onClick}>\n                {this.props.iconClass?\n                <i className={this.props.iconClass+marginClass}/> : null }\n                {this.props.children}\n            </button>\n        )\n    }\n}","import { randomString } from \"./stringUtil\";\r\nimport React from 'react'\r\n\r\nexport const readFileContentUtf8 = (file:File): Promise<string> => {\r\n\r\n    return new Promise((resolve, reject)=>{\r\n        const reader = new FileReader();\r\n        reader.readAsText(file, \"UTF-8\");\r\n        reader.onload = (evt) => {\r\n            let el = evt.target;\r\n            if (!el)\r\n            {\r\n                reject(new Error(\"Invalid element\"));\r\n                return;\r\n            }\r\n            if (typeof el.result == \"string\")\r\n            {\r\n                resolve(el.result);\r\n            }\r\n            else\r\n            {\r\n                reject(new Error(\"Invalid result type\"));\r\n            }\r\n        }\r\n        reader.onerror = reject;\r\n    })\r\n}\r\n\r\nexport const downloadFile = (data:any, filename:string, type:\"text/plain\" | \"application/json\") : void => {\r\n    var file = new Blob([data], {type: type});\r\n    if ((window.navigator as any).msSaveOrOpenBlob) // IE10+\r\n        (window.navigator as any).msSaveOrOpenBlob(file, filename);\r\n    else { // Others\r\n        var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n        a.href = url;\r\n        a.download = filename;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        setTimeout(function() {\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);  \r\n        }, 0); \r\n    }\r\n}\r\n\r\nexport const CommonTable = (props:{className:string, content:any[][]}) => {\r\n    return (\r\n        <table className={props.className}>\r\n            <tbody>\r\n                {props.content.map(row=>{\r\n                    const rowKey = \"row-\"+randomString(5);\r\n                    return <tr key={rowKey}>\r\n                        {row.map((col, i)=>{\r\n                            return <td key={rowKey+ \"-\" + i}>{col}</td>\r\n                        })}\r\n                    </tr>\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import { BasePage } from \"../BasePage\";\nimport BaseProps from '../../models/BaseProps';\nimport { FormEvent, ReactNode } from \"react\";\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\nimport { commonWrapper } from './../../utils/commonWrapper';\nimport BaseState from './../../models/BaseState';\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from './../../components/messages/ErrorMessage';\nimport InfoMessage from './../../components/messages/InfoMessage';\nimport { invokeLater } from './../../utils/eventUtil';\nimport ActionButton from './../../components/buttons/ActionButton';\nimport { CommonTable } from \"../../utils/componentUtil\";\n\nclass State  extends BaseState\n{\n    email:string            = \"\";\n    password:string         = \"\";\n    loading:boolean         = false;\n    loginSuccess:boolean    = false;\n}\nclass LoginPage extends BasePage<BaseProps, State>\n{\n    state: Readonly<State> = new State();\n   \n    constructor(props:BaseProps)\n    {\n        super(props, false, \"Login\");\n    }\n    onSubmit = (e:FormEvent) => {\n        e.preventDefault();\n        this.setState({ loading: true });\n\n        this.authService.login(this.state.email, this.state.password)\n            .then((user) => {\n                this.setState({ error: undefined, loginSuccess: true }, \n                    () => invokeLater(this.gotoHomePage, 500) );\n            })\n            .catch((err) => {\n                this.setState({ error: new Error(err?.message) });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            })\n    }\n\n    componentDidMount(): void {\n        if (this.authService.loggedIn)\n        {\n            this.navigate(\"/\");\n        }\n        \n    }\n\n    render(): ReactNode {\n        \n        if (this.state.loginSuccess)\n        {\n            return (\n                <ViewTemplate>\n                    <div className=\"pt-5 pb-5 pl-5 pr-5 text-center\">\n                        <InfoMessage >\n                            Login Succes\n                        </InfoMessage> \n                    </div>\n                </ViewTemplate>\n            )\n        }\n        return (\n            <ViewTemplate >\n                <form onSubmit={this.onSubmit} className=\"row mt-3 \">\n                    <div className=\"col-md-4\"/>\n                    <div className=\"col-md-4 bg-light\" style={{padding: 20}}>\n                        \n                        <ErrorMessage show={this.state.error != undefined}>\n                            {this.state.error?.message}\n                        </ErrorMessage> \n                        <CommonTable\n                            className=\"table table-borderless\"\n                            content={[\n                                [\n                                    \"Email\",\n                                    <input \n                                        type=\"email\"\n                                        id=\"email\"\n                                        name=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\" \n                                        required/>            \n                                ],\n                                [\n                                    \"Password\",\n                                    <input \n                                        type=\"password\"\n                                        name=\"password\"\n                                        id=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\"\n                                        required/>\n                                ]\n                            ]} />\n                        { this.state.loading? \n                        <i>Please wait...</i> : \n                        <ActionButton className=\"btn btn-success mt-3\">\n                            Login\n                        </ActionButton> }\n                        <p className=\"mt-3\">\n                            Don't have account? <Link to=\"/register\">Create account</Link>\n                        </p>\n                    </div>\n                </form>\n            </ViewTemplate>\n        )\n    }\n}\n\nexport default commonWrapper(LoginPage)","import { BasePage } from \"../BasePage\";\nimport BaseProps from '../../models/BaseProps';\nimport { FormEvent, ReactNode } from \"react\";\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\nimport { commonWrapper } from '../../utils/commonWrapper';\nimport BaseState from '../../models/BaseState';\nimport { Link } from \"react-router-dom\";\nimport ErrorMessage from '../../components/messages/ErrorMessage';\nimport InfoMessage from '../../components/messages/InfoMessage';\nimport { invokeLater } from '../../utils/eventUtil';\nimport ActionButton from '../../components/buttons/ActionButton';\nimport { CommonTable } from \"../../utils/componentUtil\";\n\nclass State  extends BaseState\n{\n    email:string            = \"\";\n    password:string         = \"\";\n    passwordRepeat:string   = \"\";\n    displayName:string      = \"\";\n    name:string             = \"\";\n    phone:string            = \"\";\n\n    loading:boolean         = false;\n    success:boolean         = false;\n}\nclass LoginPage extends BasePage<BaseProps, State>\n{\n    state: Readonly<State> = new State();\n   \n    constructor(props:BaseProps)\n    {\n        super(props, false, \"Register\");\n    }\n    onSubmit = (e:FormEvent) => {\n        e.preventDefault();\n\n        if (this.state.password !== this.state.passwordRepeat)\n        {\n            this.setState({error: new Error(\"Password mismatch\")});\n            return;\n        }\n\n        this.setState({ loading: true });\n\n        this.authService.register(\n            this.state.email, \n            this.state.name,\n            this.state.displayName,\n            this.state.password,\n            this.state.phone)\n            .then((user) => {\n                this.setState({ error: undefined, success: true });\n            })\n            .catch((err) => {\n                this.setState({ error: new Error(err?.message) });\n            })\n            .finally(() => {\n                this.setState({ loading: false });\n            })\n    }\n\n    componentDidMount(): void {\n        if (this.authService.loggedIn)\n        {\n            this.navigate(\"/\");\n        }\n        \n    }\n\n    render(): ReactNode {\n        \n        if (this.state.success)\n        {\n            return (\n                <ViewTemplate>\n                    <div className=\"pt-5 pb-5 pl-5 pr-5 text-center\">\n                        <InfoMessage >\n                            Register Success. Click <Link to=\"/login\">here</Link> to login\n                        </InfoMessage> \n                    </div>\n                </ViewTemplate>\n            )\n        }\n        return (\n            <ViewTemplate >\n                <form onSubmit={this.onSubmit} className=\"row mt-3\">\n                    <div className=\"col-md-4\"/>\n                    <div className=\"col-md-4 bg-light\" style={{padding: 20}}>\n                        \n                        <ErrorMessage show={this.state.error != undefined}>\n                            {this.state.error?.message}\n                        </ErrorMessage> \n                        <CommonTable\n                            className=\"table table-borderless\"\n                            content={[\n                                [\n                                    \"Email\",\n                                    <input \n                                        type=\"email\"\n                                        name=\"email\"\n                                        id=\"email\"\n                                        value={this.state.email}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\" \n                                        required/>\n                                ],\n                                [\n                                    \"Username\",\n                                    <input \n                                        name=\"name\"\n                                        id=\"name\"\n                                        value={this.state.name}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\" \n                                        required/>\n                                ],\n                                [\n                                    \"Display Name\",\n                                    <input \n                                        name=\"displayName\"\n                                        id=\"displayName\"\n                                        value={this.state.displayName}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\" \n                                        required/>\n                                ],\n                                [\n                                    \"Phone Number\",\n                                    <input \n                                        type=\"tel\"\n                                        name=\"phone\"\n                                        id=\"phone\"\n                                        value={this.state.phone}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\" \n                                        required/>\n                                ],\n                                [\n                                    \"Password\",\n                                    <input \n                                        type=\"password\"\n                                        name=\"password\"\n                                        id=\"password\"\n                                        value={this.state.password}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\"\n                                        required/>\n                                ],\n                                [\n                                    \"Repeat Password\",\n                                    <input \n                                        type=\"password\"\n                                        name=\"passwordRepeat\"\n                                        id=\"passwordRepeat\"\n                                        value={this.state.passwordRepeat}\n                                        onChange={this.handleInputChange}\n                                        className=\"form-control\"\n                                        required/>\n                                ]\n                            ]} />\n                        { this.state.loading? \n                        <i>Please wait...</i> : \n                        <ActionButton className=\"btn btn-success mt-3\">\n                            Register\n                        </ActionButton> }\n                        <p className=\"mt-3\">\n                            Already have account? <Link to=\"/login\">Login</Link>\n                        </p>\n                    </div>\n                </form>\n            </ViewTemplate>\n        )\n    }\n}\n\nexport default commonWrapper(LoginPage)","import React, { Component } from \"react\";\r\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\r\nimport BaseProps from \"../../models/BaseProps\";\r\nimport { BasePage } from \"../BasePage\";\r\n\r\nclass Props extends BaseProps {\r\n    \r\n    message:string\r\n}\r\nexport class ErrorView extends BasePage<Props, any>\r\n{\r\n    constructor(props:Props)\r\n    {\r\n        super(props, false, \"Error\");\r\n    }\r\n    render(): React.ReactNode {\r\n        return (\r\n            <ViewTemplate title=\"Oops !\">\r\n                <div className=\"alert alert-danger mt-3\">\r\n                    <p>{this.props.message}</p>\r\n                </div>    \r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { ViewTemplate } from '../../layout/ViewTemplate'\r\nimport { BasePage } from '../BasePage'\r\n\r\nimport './Home.css'\r\nimport { invokeLater } from './../../utils/eventUtil';\r\nimport BaseState from '../../models/BaseState';\r\nimport BaseProps from '../../models/BaseProps';\r\nimport { commonWrapper } from '../../utils/commonWrapper';\r\nimport Settings from './../../settings';\r\n\r\n\r\nclass State extends BaseState {\r\n\r\n    showTitle: boolean = false;\r\n    welcomingWords: string[] = [];\r\n\r\n}\r\nclass Home extends BasePage<BaseProps, State>\r\n{\r\n    state: State = new State();\r\n    welcomingWord: string;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.welcomingWord = Settings.App.uiSetting.defaultTitle;\r\n    }\r\n    componentDidMount() {\r\n        this.startDisplayWelcomingWord();\r\n    }\r\n    startDisplayWelcomingWord = () => {\r\n        if (this.state.welcomingWords.join(\"\") != this.welcomingWord) {\r\n            invokeLater(() => {\r\n                const words = this.state.welcomingWords;\r\n                words.push(this.welcomingWord[this.welcomingWord.length - (this.welcomingWord.length - words.length)]);\r\n                this.setState({ welcomingWords: words }, this.startDisplayWelcomingWord);\r\n            }, 200);\r\n        }\r\n    }\r\n\r\n    render(): React.ReactNode {\r\n\r\n        return (\r\n            <ViewTemplate attributes={{ style: { textAlign: 'center', paddingTop: '30vh' } }}>\r\n                <WelcomingWord word={this.state.welcomingWords.join(\"\")} />\r\n            </ViewTemplate>\r\n        )\r\n    }\r\n}\r\nconst WelcomingWord = (props: { word: string }) => {\r\n\r\n    return (\r\n        <div\r\n            style={{fontSize: '3em', fontWeight: 'bold'}} \r\n            className='text-primary text-center'>\r\n                {props.word}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default commonWrapper(Home);\r\n\r\n// const Icon = () => {\r\n//     return (\r\n//         <svg className='mb-5' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 600 600\" width=\"200\" height=\"200\">\r\n\r\n//             <circle className='iconStroke strokeDark' fill=\"none\" strokeWidth={190} cx=\"237\" cy=\"310\" r=\"95\" />\r\n//             <circle className='iconStroke strokeOrange' fill=\"none\" strokeWidth={30} cx=\"237\" cy=\"310\" r=\"204.02205763103166\" />\r\n//             <circle className='iconStroke strokeOrange' fill=\"none\" strokeWidth={150} cx=\"362\" cy=\"310\" r=\"75\" />\r\n//             {/* <circle className=\"iconBg\" style={{fill:this.state.orangeBgColor}} strokeWidth={80} cx=\"362\" cy=\"310\" r=\"120\"  /> */}\r\n//             <circle className='iconStroke strokeDark' fill=\"none\" strokeWidth={80} cx=\"362\" cy=\"310\" r=\"187.3846311734236\" />\r\n\r\n//         </svg>\r\n//     );\r\n// }","\nimport { resolve } from 'inversify-react';\nimport { Component, ReactNode, FormEvent } from 'react';\nimport ErrorMessage from '../../components/messages/ErrorMessage';\nimport AuthService from '../../services/AuthService';\nimport ControlledComponent from '../ControlledComponent';\nimport SearchResultItem from './../../models/product/SearchResultItem';\nimport ProductService from './../../services/ProductService';\nimport ProductSpec from './../../models/product/ProductSpec';\nimport { currencyNumber } from '../../utils/stringUtil';\ninterface Props \n{\n    item: SearchResultItem\n}\nclass State \n{\n    loggedIn: boolean = false;\n    orderCount: number = 0;\n    phoneNumber: string  = \"\";\n    note: string = \"\";\n    address: string = \"\";\n    productSpec:ProductSpec | undefined;\n}\nexport default class OrderView extends ControlledComponent<Props, State>\n{\n    state: Readonly<State> = new State();\n    @resolve(AuthService)\n    private authService:AuthService;\n    @resolve(ProductService)\n    private productService:ProductService;\n    \n    constructor(props:Props) {\n        super(props);\n        console.log(\"Props: \", props);\n    }\n    componentDidMount() {\n        this.setState({ loggedIn: this.authService.loggedIn, phoneNumber: this.authService.loggedUser?.phoneNumber ?? \"\" });\n        if (this.authService.loggedIn) {\n            this.loadDetail();\n        }\n    }\n    loadDetail = () => {\n        this.productService.getDetail(this.props.item)\n            .then((spec) => this.setState({ productSpec: spec }))\n            .catch(console.error);\n    }\n    onSubmit = (e:FormEvent) => {\n        e.preventDefault();\n    }\n\n    render(): ReactNode {\n        if (!this.state.loggedIn) {\n            return (\n                <ErrorMessage>\n                    Please log in to order this product\n                </ErrorMessage>\n            )\n        }\n        const spec = this.state.productSpec;\n        return (\n            <div>\n                <h3 className='text-center'>Order Product From <small>{this.props.item?.displayLink}</small></h3>\n                <div className='row w-100 mt-5'>\n                    <div className='col-md-3'>\n                        <img className='image' width={200} src={this.props.item.link} />\n                        <p/>\n                    </div>\n                    <div className='col-md-4'>\n                        { !spec ? \n                          <i>Loading detail...</i> : \n                          <div>\n                             <p style={{margin: 0}}>Name</p>\n                             <b>{spec.name}</b>\n                             <p style={{margin: 0}}>Price</p>\n                             <b>{currencyNumber(spec.price)}</b>\n                          </div>\n                        }\n                    </div>\n                    <div className='col-md-5'>\n                        <form onSubmit={this.onSubmit}>\n                            <p>Order Count</p>\n                            <input \n                                type=\"number\" \n                                name=\"orderCount\"\n                                value={this.state.orderCount} \n                                onChange={this.handleInputChange}\n                                className='form-control mb-2'\n                                min={1}\n                                required \n                            />\n                            <p>Phone Number</p>\n                            <input\n                                name=\"phoneNumber\"\n                                value={this.state.phoneNumber}\n                                onChange={this.handleInputChange}\n                                className=\"form-control mb-2\"\n                                required \n                            />\n                            <p>Address</p>\n                            <textarea\n                                name=\"address\"\n                                value={this.state.address}\n                                onChange={this.handleInputChange}\n                                className=\"form-control mb-2\"\n                                required \n                            />\n                            <p>Note</p>\n                            <textarea\n                                name=\"note\"\n                                value={this.state.note}\n                                onChange={this.handleInputChange}\n                                className=\"form-control mb-2\"\n                            />\n                            <input type='submit' className='btn btn-success mt-2' value={'Submit'} />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","\nimport React, { Fragment, ReactNode } from \"react\";\nimport { ViewTemplate } from \"../../layout/ViewTemplate\";\nimport { commonWrapper } from \"../../utils/commonWrapper\";\nimport { BasePage } from \"../BasePage\";\nimport BaseProps from './../../models/BaseProps';\nimport BaseState from './../../models/BaseState';\nimport ProductSearchResult from '../../models/product/ProductSearchResult';\nimport ProductService from './../../services/ProductService';\nimport { resolve } from 'inversify-react';\nimport ErrorMessage from \"../../components/messages/ErrorMessage\";\nimport EventService from './../../services/EventService';\nimport SearchResultItem from './../../models/product/SearchResultItem';\nimport OrderView from \"./OrderView\";\nimport './SearchPage.scss';\nimport AnchorButton from \"../../components/buttons/AnchorButton\";\n\nclass State extends BaseState\n{\n    searchResult : ProductSearchResult | undefined;\n    searchKey:string | undefined;\n    loading: boolean = false;\n}\nclass SearchPage extends BasePage<BaseProps, State>\n{\n    state: Readonly<State> = new State();\n\n    @resolve(ProductService)\n    private productService: ProductService;\n    @resolve(EventService)\n    private evtService:EventService;\n\n    constructor(props:any) {\n        super(props, false, \"Search\");\n    }\n\n    componentDidMount() {\n        this.evtService.onProductSearchKeyUpdate.add(\"searchpage\", this.search);\n        if (!this.props.routeParams || !this.props.routeParams['searchKey']) {\n            return;\n        }\n        this.search(this.props.routeParams['searchKey']);\n    }\n\n    componentWillUnmount() {\n        this.evtService.onProductSearchKeyUpdate.remove(\"searchpage\");\n    }\n\n    search = (key:string, startIndex:number = 1) => {\n        this.setState({ loading: true, searchKey: key });\n        this.productService.search(key, startIndex)\n            .then(response => {\n                this.setState({ searchResult: response });\n            })\n            .catch(console.error)\n            .finally(()=>{\n                this.setState({ loading: false });\n            })\n    }\n    gotoIndex = (i:number) => {\n        if (!this.state.searchKey) {\n            return;\n        }\n        this.search(this.state.searchKey, i);\n    }\n    order = (item:SearchResultItem) => {\n        this.dialog.showContent(\"Order Item\", <OrderView item={item}/>)\n    }\n    render(): ReactNode {\n        if (!this.state.searchKey) {\n            return (\n                <ViewTemplate>\n                    <p>Please provide search key</p>\n                </ViewTemplate>\n            )\n        }\n        return (\n            <ViewTemplate>\n                <div className=\"row w-100 mb-5 \">\n                   \n                    { this.state.loading ?\n                    <div className=\"col-12 text-center\"><i>Loading...</i></div> :\n                    this.state.searchResult == undefined || this.state.searchResult.items.length == 0 ?\n                    <ErrorMessage >\n                        No Result\n                    </ErrorMessage> :\n                    <SearchResult \n                        gotoIndex={this.gotoIndex}\n                        searchKey={this.state.searchKey} \n                        result={this.state.searchResult}\n                        order={this.order}\n                    />}\n                </div>\n            </ViewTemplate>\n        )\n    }\n}\n\nexport default commonWrapper(SearchPage);\n\nconst SearchResult = (props:{\n    searchKey:string, \n    result: ProductSearchResult, \n    order:(item:SearchResultItem) => any,\n    gotoIndex:(i:number)=>any}) => {\n    const nextPage = props.result.queries.nextPage;\n    const reqPage  = props.result.queries.request;\n    return (\n        <Fragment>\n             <div className=\"col-md-6 bg-light my-2\">\n                <h4>Search Result: <b>\"{props.searchKey}\"</b> </h4>\n            </div>\n            <div className=\"col-md-6 bg-light my-2 product-pagination-button\">\n                <nav>\n                    {reqPage && reqPage.length > 0 && reqPage[0].startIndex > 1 &&\n                        <a className=\"btn btn-outline-primary btn-sm mr-2\" onClick={()=>props.gotoIndex(reqPage[0].startIndex - reqPage[0].count)}>\n                            Prev\n                        </a>\n                    }        \n                    {nextPage && nextPage.length > 0 &&\n                        <a className=\"btn btn-outline-primary btn-sm\" onClick={()=>props.gotoIndex(nextPage[0].startIndex)}>\n                            Next\n                        </a>\n                    }\n                </nav>\n            </div>\n            {props.result.items.map((item)=>{\n\n                return (\n                    <div key={\"search_result_\"+item.link} className=\"col-md-2 mt-2\">\n                        <div className=\"border border-gray pt-1 pb-1 pl-1 pr-1\">\n                            <div className=\"product-item-image\" style={{\n                                backgroundImage: `url(${item.image.thumbnailLink})`\n                            }}>\n\n                            </div>\n                            <div className=\"text-center\">\n                                <a target={\"_blank\"} href={item.image.contextLink} className=\"badge bg-light\">\n                                    {item.displayLink}\n                                </a>\n                                <label className=\"text-left\" dangerouslySetInnerHTML={{\n                                    __html: item.htmlTitle\n                                }}></label>\n                                <AnchorButton\n                                    iconClass=\"fas fa-shopping-cart\"\n                                    className=\"btn btn-success btn-sm\"\n                                    onClick={() => props.order(item)}\n                                >\n                                    Order\n                                </AnchorButton>\n                            </div>\n                        </div>\n                    </div>\n                )\n            })}\n           \n        </Fragment>\n    )\n}","import { resolve } from 'inversify-react';\r\nimport React, { Component, Fragment } from 'react'\r\nimport {  Navigate, Route, Routes } from 'react-router-dom'; \r\nimport BaseProps from '../models/BaseProps';\r\nimport MainAdminPage from '../pages/admin/MainAdminPage';\r\nimport ProductsPage from '../pages/admin/ProductsPage';\r\nimport UsersPage from '../pages/admin/UsersPage';\r\nimport LoginPage from '../pages/auth/LoginPage';\r\nimport RegisterPage from '../pages/auth/RegisterPage';\r\nimport { ErrorView } from '../pages/error/ErrorView';\r\n// import { ExperimentView } from '../pages/experiments/extended/ExperimentView';\r\nimport Home from '../pages/home/Home';\r\nimport SearchPage from '../pages/product/SearchPage';\r\nimport AuthService from './../services/AuthService';\r\nexport class Routing extends Component<BaseProps, any>\r\n{\r\n    @resolve(AuthService)\r\n    private authService:AuthService;\r\n\r\n    render(): React.ReactNode {\r\n        return (\r\n            <Fragment> \r\n                \r\n                <Routes>\r\n                    <Route path=\"/\" element={ <Home/> } />\r\n                    <Route path=\"/home\" element={ <Home/> } /> \r\n                    \r\n                    <Route path=\"/login\" element={ <LoginPage/> } /> \r\n                    <Route path=\"/register\" element={ <RegisterPage/> } /> \r\n\r\n                    <Route path=\"/search/:searchKey\" element={ <SearchPage/> } /> \r\n\r\n                    <Route path=\"/admin\" element={\r\n                        this.authService.isAdmin ? <MainAdminPage/> : <Navigate to=\"/\" />\r\n                     }/> \r\n                    <Route path=\"/admin/users\" element={\r\n                        this.authService.isAdmin ?<UsersPage/> : <Navigate to=\"/\" />\r\n                     } /> \r\n                    <Route path=\"/admin/products\" element={\r\n                        (this.authService.isAdmin) ? <ProductsPage/> : <Navigate to=\"/\" /> } /> \r\n                    \r\n                    <Route path=\"*\" element={ <ErrorView    message=\"The requested page is not found.\" /> } />\r\n                </Routes>\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import { Component, ReactNode } from \"react\";\nimport { commonWrapper } from './../utils/commonWrapper';\nimport User from './../models/User';\nimport { resolve } from \"inversify-react\";\nimport AuthService from './../services/AuthService';\nimport DialogService from './../services/DialogService';\nimport BaseProps from './../models/BaseProps';\nimport { Link } from \"react-router-dom\";\n\ninterface Props  extends BaseProps\n{\n    user:User\n}\nclass State \n{\n    showDropdown: boolean = false;\n}\nclass UserSection extends Component<Props, State>\n{\n    state: Readonly<State> = new State();\n\n    @resolve(AuthService)\n    private authService:AuthService;\n    @resolve(DialogService)\n    private dialog:DialogService;\n\n    logout = () => {\n        this.dialog.showConfirmDanger(\"Logout\", \"Do you want to logout?\")\n            .then(ok => {\n                if (ok) {\n                    this.authService.logout();\n                }\n            })\n    }\n    \n    toggleDropdown = () => {\n        this.setState({ showDropdown: !this.state.showDropdown });\n    }\n    onMenuClick = (path: string) => {\n        if (this.props.navigate) {\n            this.props.navigate(path);\n            this.setState({ showDropdown: false });\n        }\n    }\n    render(): ReactNode {\n\n        return (\n            <div >\n                <a className=\"btn btn-light\" onClick={this.toggleDropdown}>\n                    <i className=\"fas fa-user mr-3\" /> {this.props.user.displayName}\n                </a>\n                <div style={{position: 'absolute'}}>\n                    { this.state.showDropdown? \n                    <div\n                        style={{width: '200px', zIndex: 1, position: 'relative'}}\n                        className=\"bg-light border border-gray rounded text-left pt-3 pb-3\" >\n                        { this.props.user.role == 'Admin' ?\n                        <a className=\"btn btn-text text-success\" onClick={() => this.onMenuClick(\"/admin\")}>\n                            <i className=\"fas fa-tachometer-alt mr-3\"/>Admin Area\n                        </a> : null }\n                        <a className=\"btn btn-text text-info\" onClick={() => this.onMenuClick(\"/myorder\")}>\n                            <i className=\"fas fa-shopping-cart mr-3\"/>My Orders\n                        </a>\n                        <a className=\"btn btn-text text-danger\" onClick={this.logout}>\n                            <i className=\"fas fa-sign-out-alt mr-3\"/>Logout\n                        </a>\n                    </div> : null }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default commonWrapper(UserSection);","import { resolve } from \"inversify-react\";\r\nimport React, { FormEvent  } from \"react\";  \r\nimport { Link } from \"react-router-dom\";\r\nimport BaseProps from \"../models/BaseProps\";\r\nimport { commonWrapper } from \"../utils/commonWrapper\";\r\nimport RoutingService from './../services/RoutingService';\r\nimport Settings from './../settings';\r\nimport AuthService from './../services/AuthService';\r\nimport ControlledComponent from \"../pages/ControlledComponent\";\r\nimport UserSection from \"./UserSection\";\r\nimport User from './../models/User';\r\nimport EventService from './../services/EventService';\r\n\r\nclass State {\r\n    activeMenu:string | undefined;\r\n    title:string        = Settings.App.uiSetting.defaultTitle;\r\n    searchKey:string    = \"\";\r\n }\r\n class Props extends BaseProps {\r\n     currentLocation?:Location;\r\n }\r\nclass HeaderView extends ControlledComponent<Props, State>\r\n{\r\n    @resolve(AuthService)\r\n    private authService:AuthService;\r\n    @resolve(RoutingService)\r\n    private routingService:RoutingService;\r\n    @resolve(EventService)\r\n    private evtService:EventService;\r\n\r\n    state:State = new State();\r\n\r\n    private _user:User | undefined;\r\n    \r\n    componentDidMount() {\r\n        this.routingService.routeUpdateCallbacks.add(\"header\", console.log);\r\n        this.authService.onUserUpdated.add(\"header\", this.onUserUpdated);\r\n    }\r\n    componentWillUnmount() {\r\n        this.authService.onUserUpdated.remove(\"header\");\r\n    }\r\n    gotoLoginPage = () => {\r\n        if (this.props.navigate) {\r\n            this.props.navigate(\"/login\");\r\n        }\r\n    }\r\n    onUserUpdated = (user: User | undefined) => {\r\n        if (this._user != undefined && user == undefined) {\r\n            this.gotoLoginPage();\r\n        }\r\n        this._user = user;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    private navigate = (url:string) => {\r\n        if (this.props.navigate == undefined) {\r\n            console.warn(\"no props: navigate\");\r\n            return;\r\n        }\r\n        this.props.navigate(url);\r\n    }\r\n\r\n    brandOnClick = () => {\r\n       this.navigate(\"/\");\r\n    }\r\n\r\n    onFormSearchSubmit = (e:FormEvent) => {\r\n        e.preventDefault();\r\n        if (!this.state.searchKey && this.state.searchKey.trim() == \"\") {\r\n            return;\r\n        }\r\n        this.navigate(\"/search/\"+this.state.searchKey);\r\n        this.evtService.onProductSearchKeyUpdate.invoke(this.state.searchKey);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row w-100 mt-2\">\r\n                        <div className=\"col-md-2 mb-2 text-center\">\r\n                            <Link className=\"navbar-brand\" to=\"/\">{this.state.title}</Link>\r\n                        </div>\r\n                        <div className=\"col-md-8 mb-2\">\r\n                            <form onSubmit={this.onFormSearchSubmit}>\r\n                                <div className=\"input-group\">\r\n                                    <input \r\n                                        value={this.state.searchKey}\r\n                                        className=\"form-control\" \r\n                                        name=\"searchKey\"\r\n                                        onChange={this.handleInputChange}\r\n                                        placeholder=\"Search Products\"/>\r\n                                    <div className=\"input-group-append\">\r\n                                        <button\r\n                                            type=\"submit\"\r\n                                            className=\"btn btn-success\">\r\n                                            <i className=\"fas fa-search mr-2\"/> Search\r\n                                        </button>\r\n\r\n                                    </div>\r\n                                </div>\r\n\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"col-md-2 mb-2 text-center\">\r\n                            { !this.authService.loggedIn?\r\n                            <Link to=\"/login\" className=\"btn btn-primary\">\r\n                               <i className=\"fas fa-sign-in-alt mr-2\"/> Login\r\n                            </Link>\r\n                            : \r\n                            <UserSection user={this.authService.loggedUser}/> }\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </nav>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default commonWrapper(HeaderView);\r\n\r\n\r\n","import React, { Component, Fragment } from 'react'\r\nimport { DialogType } from '../../constants/DialogType';\r\nimport Settings from '../../settings';\r\nimport { invokeLater } from '../../utils/eventUtil';\r\n\r\ntype ButtonRef              = React.RefObject< HTMLButtonElement >;\r\nconst initialMargin         = '-560px';\r\nconst transitionDuration    = '250ms';\r\nconst BACK_COLOR            = 'rgba(100,100,100,0.7)';\r\n\r\nclass State {\r\n    backColor: string = 'transparent';\r\n    marginTop: string = initialMargin;\r\n}\r\ninterface Props \r\n{\r\n    onConfirm:(arg:any)=>any;\r\n    onCancel:(arg:any)=>any;\r\n    onClose:(arg:any)=>any;\r\n\r\n    type:DialogType;\r\n    yesOnly:boolean;\r\n    yesLabel:string;\r\n\r\n    title?:string;\r\n\r\n    children:any;\r\n}\r\nclass Dialog extends Component<Props, State> {\r\n    yesButton:ButtonRef     = React.createRef();\r\n    cancelButton:ButtonRef  = React.createRef();\r\n    state:State             = new State();\r\n\r\n    constructor(props:any) {\r\n        super(props);\r\n    }\r\n    onConfirm = (e:any) => {        \r\n        this.close(()=>{\r\n            this.props.onConfirm(e);\r\n        });\r\n    }\r\n    close = (callback:()=>any)=> {\r\n        invokeLater(()=>{\r\n            this.setState({ backColor:'transparent', marginTop: initialMargin }, ()=>{\r\n                invokeLater(callback, 100);\r\n            });\r\n        }, 100);\r\n    }\r\n    onCancel = (e:any) => {\r\n        this.close(()=>{\r\n            if (this.props.onCancel) {\r\n                this.props.onCancel(e);\r\n            }\r\n        });\r\n    }\r\n    onClose = (e:any) => {\r\n        this.close(()=>{\r\n            this.props.onClose(e);\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const focusCancelBtn = this.props.type == DialogType.ERROR || this.props.type == DialogType.WARNING ;\r\n        if (!focusCancelBtn && this.yesButton.current) \r\n        {\r\n            this.yesButton.current.focus();\r\n        } \r\n        else if (focusCancelBtn && this.cancelButton.current) \r\n        {\r\n            this.cancelButton.current.focus();\r\n        }\r\n        else if (focusCancelBtn && this.yesButton.current)\r\n        {\r\n            this.yesButton.current.focus();\r\n        }\r\n\r\n        invokeLater(()=>{\r\n            let marginTop = this.stringContent ? '30vh' : '0vh';\r\n            this.setState({backColor:BACK_COLOR, marginTop: marginTop})\r\n        }, 100);\r\n    }\r\n\r\n    get stringContent() { return typeof this.props.children == \"string\"; }\r\n\r\n    get headerClassName() : string\r\n    {\r\n        switch (this.props.type) {\r\n            case DialogType.INFO:\r\n            case DialogType.INFO_NO_BUTTONS : \r\n                                      return \"bg-info text-light\";\r\n            case DialogType.WARNING : return \"bg-warning text-dark\";\r\n            case DialogType.ERROR   : return \"bg-danger text-light\";\r\n        \r\n            default                 : return \"bg-secondary\";\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const title     = this.props.title ? this.props.title:  \"Info\";\r\n        const yesOnly   = this.props.yesOnly == true;\r\n        const maxWidth  = this.stringContent? '500px': '85vw';\r\n\r\n        const dialogStyle = {\r\n            transitionDuration:  transitionDuration,\r\n            marginTop: this.state.marginTop,\r\n            maxWidth: maxWidth,\r\n            marginLeft: 'auto',\r\n            marginRight: 'auto'\r\n        };\r\n        const modalDialogClass =  this.stringContent ? \"modal-dialog -modal-dialog-centered\" : \"-modal-dialog-centered\";\r\n        return (\r\n            <Fragment>\r\n                <Backdrop bgColor={this.state.backColor} />\r\n                <div \r\n                    className=\"modal show\" \r\n                    style={{ display: 'block' }}  >\r\n                    <div \r\n                        className={modalDialogClass}\r\n                        style={dialogStyle}>\r\n                        <div className=\"modal-content\" style={{marginTop:'5px'}} >\r\n                            <Header \r\n                                className={this.headerClassName} \r\n                                title={title} \r\n                                onClose={this.onClose} />\r\n                            <div className=\"modal-body\" style={{maxHeight: '70vh', overflow: 'auto'}} >{this.props.children}</div>\r\n                            { this.props.type == DialogType.INFO_NO_BUTTONS? \r\n                            <div className={\"modal-footer \"} >\r\n                                <h6 className='w-100 text-center'>{Settings.App.uiSetting.defaultTitle}</h6>\r\n                            </div> :\r\n                            <Footer \r\n                                cancelButton={this.cancelButton} \r\n                                yesLabel={this.props.yesLabel}\r\n                                yesButton={this.yesButton} \r\n                                yesOnly={yesOnly} \r\n                                onConfirm={this.onConfirm} \r\n                                onCancel={this.onCancel} /> }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction Backdrop(props:{bgColor:string}) {\r\n    const style = { transitionDuration:transitionDuration, backgroundColor: props.bgColor };\r\n    return (\r\n        <div className=\"modal-backdrop\" style={style} />\r\n    );\r\n}\r\n\r\nfunction Footer(props:{yesLabel:string, yesButton:ButtonRef, cancelButton:ButtonRef, yesOnly:boolean, onConfirm:(e:any)=>any, onCancel?:(e:any)=>any}) {\r\n    return (\r\n        <div className={\"modal-footer\"} >\r\n            <button \r\n                ref={props.yesButton} \r\n                type=\"button\"\r\n                onClick={props.onConfirm} \r\n                className=\"btn btn-outline-primary\" >\r\n                {props.yesLabel}\r\n            </button>\r\n            {props.yesOnly ? \r\n                null : \r\n                <button \r\n                    ref={props.cancelButton} \r\n                    type=\"button\"\r\n                    onClick={props.onCancel} \r\n                    className=\"btn btn-outline-secondary\" >\r\n                    No\r\n                </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Header(props:{ title:string, className:string, onClose:(e:any)=>any }) {\r\n    return (\r\n        <div className={\"modal-header \" + props.className} >\r\n            <h5 className=\"modal-title\" id=\"exampleModalCenterTitle\" >{props.title}</h5>\r\n            <button onClick={props.onClose} type=\"button\" className=\"close\" >\r\n                <span><i className=\"fas fa-times\" /></span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialog;","import React, { Component, Fragment, ReactElement, RefObject } from 'react';\r\nimport './App.css'; \r\nimport { Routing } from './layout/Routing';\r\nimport { useLocation, Location } from 'react-router-dom';\r\nimport { resolve } from 'inversify-react';\r\nimport HeaderView from './layout/HeaderView';\r\nimport Dialog from './components/containers/Dialog';\r\nimport { DialogType } from './constants/DialogType';\r\nimport DialogService from './services/DialogService';\r\nimport { Chart as ChartJS, CategoryScale, Legend, LinearScale, LineElement, PointElement, Title, Tooltip } from 'chart.js';\r\n \r\nimport DialogProps from './models/DialogProps';\r\nimport AuthService from './services/AuthService';\r\nimport { invokeLater } from './utils/eventUtil';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\n\r\n\r\nfunction App() {\r\n  const loc:Location = useLocation();\r\n  return (\r\n    <Fragment>\r\n      <HeaderView currentLocation={loc}/>\r\n      <Root />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nclass State \r\n{\r\n  loaded:boolean = false;\r\n  loadingError:boolean = false;\r\n}\r\nclass Root extends Component<any,State>\r\n{\r\n  @resolve(AuthService)\r\n  private authService:AuthService;\r\n  state: Readonly<State> =new State();\r\n\r\n  componentDidMount()\r\n  {\r\n    invokeLater(this.load, 100);\r\n  }\r\n  load = () => {\r\n    this.setState({ loadingError: false });\r\n    \r\n    this.authService.loadApplication()\r\n      .then(()=>{\r\n        this.setState({ loaded: true });\r\n      })\r\n      .catch(()=>{\r\n        this.setState({ loadingError: true });\r\n      })\r\n  }\r\n\r\n  render(): React.ReactNode {\r\n\r\n    if (this.state.loadingError == true)\r\n    {\r\n      return (\r\n        <div className='w-100 text-center'>\r\n          <h3 className=\"mt-5 text-danger\">Error while loading content</h3>\r\n          <a className='btn btn-outline-dark btn-sm' onClick={this.load}>\r\n            <i className='fas fa-redo mr-3'></i>\r\n            Reload\r\n          </a>\r\n        </div>\r\n      )\r\n    }\r\n    if (this.state.loaded == false)\r\n    {\r\n      return (<h3 className='mt-5 text-center text-secondary'>Loading content</h3>)\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <DialogContainer/>\r\n        <Routing />\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nclass DialogState\r\n{\r\n  show:boolean = false;\r\n}\r\nexport class DialogContainer extends Component<any,DialogState>\r\n{\r\n  state: Readonly<DialogState> = new DialogState();\r\n  \r\n  // dialog props\r\n  dialogTitle:string;\r\n  dialogContent:any;\r\n  dialogYesOnly:boolean;\r\n\r\n  yesLabel:string = \"Yes\";\r\n\r\n  dialogOnConfirm:(e:any) => any;\r\n  dialogOnCancel:(e:any) => any;\r\n\r\n  onCloseCallback?:(e:any)=>any;\r\n\r\n \r\n  \r\n  dialogType:DialogType = DialogType.INFO;\r\n\r\n  @resolve(DialogService)\r\n  private dialogService:DialogService;\r\n  private ref:RefObject<Dialog> = React.createRef();\r\n\r\n  constructor(props:any)\r\n  {\r\n    super(props);\r\n  }\r\n\r\n  // fired when confirmed/canceled\r\n  public dismissAlert = () => {\r\n    if (this.ref.current)\r\n    {\r\n      this.ref.current.close(()=>{\r\n        this.setState({show:false});\r\n      })\r\n      return;\r\n    }\r\n    this.setState({show:false});\r\n  } \r\n  \r\n  // fired when pressing [X] button\r\n  dialogOnClose = (e:any) => {\r\n    \r\n    this.setState({show: false}, ()=>{\r\n      if (this.onCloseCallback)\r\n      {\r\n        this.onCloseCallback(e);\r\n      }\r\n\r\n      this.resetProps();\r\n    });\r\n  }\r\n  setContent(content:ReactElement<DialogProps, typeof Component >)\r\n  {\r\n    this.dialogContent = content;\r\n    this.forceUpdate();\r\n  }\r\n  componentDidMount()\r\n  {\r\n    this.dialogService.setContainer( this );\r\n  }\r\n  resetProps = () => {\r\n    this.onCloseCallback  = undefined;\r\n    this.yesLabel         = \"Yes\";\r\n  }\r\n  get isShown() { return this.state.show }\r\n  \r\n  public showNoButtons = ( title:string, content:any,  onClose:(e:any) => any ) => {\r\n    this.dialogType     = DialogType.INFO_NO_BUTTONS;\r\n    this.dialogTitle    = title;\r\n    this.dialogContent  = content; \r\n\r\n    this.display();\r\n  }\r\n  public show = (\r\n    type:DialogType,\r\n    title:string,\r\n    content:any,\r\n    yesOnly:boolean,\r\n    onConfirm:(e:any) => any,\r\n    onCancel?:(e:any) => any,\r\n    yesLabel?:string\r\n  ) => {\r\n     \r\n    this.dialogType     = type;\r\n    this.dialogTitle    = title;\r\n    this.dialogContent  = content;\r\n    this.dialogYesOnly  = yesOnly;\r\n    this.yesLabel       = yesLabel ? yesLabel : this.yesLabel;\r\n\r\n    this.dialogOnConfirm = (e:any) => {\r\n      this.dismissAlert();\r\n      onConfirm(e);\r\n    }\r\n    this.onCloseCallback = onCancel;\r\n    if (!yesOnly) {\r\n      \r\n      this.dialogOnCancel = (e:any) => {\r\n        this.dismissAlert();\r\n        if (onCancel) {\r\n          onCancel(e);\r\n        }\r\n      };\r\n    }\r\n    this.display();\r\n  }\r\n\r\n  display()\r\n  {\r\n    this.setState({ show: true });\r\n  } \r\n\r\n  render(): React.ReactNode {\r\n      \r\n    return (\r\n      this.state.show? \r\n      <Dialog \r\n        ref={this.ref}\r\n        title={this.dialogTitle}\r\n        yesOnly={this.dialogYesOnly}\r\n        onConfirm={this.dialogOnConfirm}\r\n        onCancel={this.dialogOnCancel}\r\n        onClose={this.dialogOnClose}\r\n        type={this.dialogType}\r\n        \r\n        yesLabel={this.yesLabel}\r\n      >\r\n        {this.dialogContent}\r\n      </Dialog> : null\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'inversify-react';\r\nimport { container } from './inversify.config';\r\n\r\n// configure monaco editor\r\n// @ts-ignore \r\nglobal.self.MonacoEnvironment = {\r\n\tgetWorkerUrl: function (_moduleId: any, label: string) {\r\n\t\tconsole.log(\"get worker function: \", _moduleId, label);\r\n\t\tif (label === 'json') {\r\n\t\t\treturn './editorworkers/json.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'css' || label === 'scss' || label === 'less') {\r\n\t\t\treturn './editorworkers/css.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'html' || label === 'handlebars' || label === 'razor') {\r\n\t\t\treturn './editorworkers/html.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'typescript' || label === 'javascript') {\r\n\t\t\treturn './editorworkers/ts.worker.bundle.js';\r\n\t\t}\r\n\t\tif (label === 'yaml' || label === 'yml')\r\n\t\t{\r\n\t\t\treturn  './editorworkers/yaml.worker/js';\r\n\t\t}\r\n\t\treturn './editorworkers/editor.worker.bundle.js';\r\n\t}\r\n};\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider container={container} >\r\n    <HashRouter>\r\n\r\n      <App />\r\n    </HashRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}